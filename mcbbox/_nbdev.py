# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"fetch_data": "10_subcoco_utils.ipynb",
         "fetch_subcoco": "10_subcoco_utils.ipynb",
         "CocoDatasetStats": "10_subcoco_utils.ipynb",
         "empty_list": "10_subcoco_utils.ipynb",
         "load_stats": "10_subcoco_utils.ipynb",
         "box_within_bounds": "10_subcoco_utils.ipynb",
         "is_notebook": "10_subcoco_utils.ipynb",
         "overlay_img_bbox": "10_subcoco_utils.ipynb",
         "bbox_to_rect": "10_subcoco_utils.ipynb",
         "label_for_bbox": "10_subcoco_utils.ipynb",
         "listify": "10_subcoco_utils.ipynb",
         "tensorify": "10_subcoco_utils.ipynb",
         "SubCocoWrapper": "10_subcoco_utils.ipynb",
         "iou_calc": "10_subcoco_utils.ipynb",
         "match_true_false_neg": "10_subcoco_utils.ipynb",
         "calc_wavg_F1": "10_subcoco_utils.ipynb",
         "digest_pred": "10_subcoco_utils.ipynb",
         "SubCocoDataset": "20_subcoco_lightning_utils.ipynb",
         "SubCocoDataModule": "20_subcoco_lightning_utils.ipynb",
         "FRCNN": "30_subcoco_frcnn_lightning.ipynb",
         "run_training": "50_subcoco_effdet_icevision_fastai.ipynb",
         "save_final": "50_subcoco_effdet_icevision_fastai.ipynb",
         "RetinaNetModule": "40_subcoco_retinanet_lightning.ipynb",
         "SubCocoParser": "50_subcoco_effdet_icevision_fastai.ipynb",
         "parse_subcoco": "50_subcoco_effdet_icevision_fastai.ipynb",
         "SaveModelDupBestCallback": "50_subcoco_effdet_icevision_fastai.ipynb",
         "FastGPUMonitorCallback": "50_subcoco_effdet_icevision_fastai.ipynb",
         "gen_transforms_and_learner": "50_subcoco_effdet_icevision_fastai.ipynb"}

modules = ["subcoco_utils.py",
           "subcoco_lightning_utils.py",
           "subcoco_frcnn_lightning.py",
           "subcoco_retnet_lightning.py",
           "subcoco_effdet_icevision_fastai.py"]

doc_url = "https://bguan.github.io/mcbbox"

git_url = "https://github.com/bguan/mcbbox/tree/master/"

def custom_doc_links(name): return None
